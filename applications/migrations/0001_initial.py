# Generated by Django 5.0.2 on 2025-03-30 13:41

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='질문')),
                ('max_length', models.IntegerField(default=500)),
                ('order', models.PositiveIntegerField(verbose_name='순서')),
                ('is_required', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '질문',
                'verbose_name_plural': '질문 목록',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='RecruitmentSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='모집 제목')),
                ('description', models.TextField(verbose_name='모집 설명')),
                ('application_start_date', models.DateTimeField(verbose_name='지원 시작일')),
                ('application_end_date', models.DateTimeField(verbose_name='지원 마감일')),
                ('interview_start_date', models.DateTimeField(verbose_name='면접 시작일')),
                ('interview_end_date', models.DateTimeField(verbose_name='면접 종료일')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '모집 설정',
                'verbose_name_plural': '모집 설정 목록',
            },
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=100, verbose_name='이름')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='이메일')),
                ('phone_number', models.CharField(help_text='"-" 없이 숫자만 입력해주세요.', max_length=11, validators=[django.core.validators.RegexValidator('^\\d{11}$', '올바른 전화번호를 입력해주세요.')], verbose_name='전화번호')),
                ('birth_date', models.DateField(verbose_name='생년월일')),
                ('university', models.CharField(max_length=100, verbose_name='대학교')),
                ('major', models.CharField(max_length=100, verbose_name='전공')),
                ('grade', models.IntegerField(choices=[(1, '1학년'), (2, '2학년'), (3, '3학년'), (4, '4학년')], verbose_name='학년')),
                ('academic_status', models.CharField(choices=[('attending', '재학'), ('leave', '휴학'), ('graduated', '졸업'), ('expected_graduation', '졸업예정')], max_length=20, verbose_name='학적상태')),
                ('email_verification_token', models.CharField(blank=True, max_length=6)),
                ('token_generated_at', models.DateTimeField(blank=True, null=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('password_reset_token', models.UUIDField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '지원자',
                'verbose_name_plural': '지원자 목록',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', '임시저장'), ('submitted', '제출완료'), ('document_screening', '서류심사중'), ('document_passed', '서류합격'), ('document_failed', '서류불합격'), ('interview_scheduled', '면접예정'), ('interview_completed', '면접완료'), ('final_passed', '최종합격'), ('final_failed', '최종불합격')], default='draft', max_length=20, verbose_name='상태')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('submitted_at', models.DateTimeField(blank=True, null=True, verbose_name='제출일')),
                ('preferred_interview_times', models.TextField(blank=True, help_text='면접 가능한 시간대를 자유롭게 작성해주세요.', verbose_name='선호하는 면접 시간')),
                ('interview_date', models.DateField(blank=True, null=True, verbose_name='면접 날짜')),
                ('interview_start_time', models.TimeField(blank=True, null=True, verbose_name='면접 시작 시간')),
                ('interview_end_time', models.TimeField(blank=True, null=True, verbose_name='면접 종료 시간')),
                ('interview_location', models.CharField(blank=True, max_length=200, verbose_name='면접 장소')),
                ('interview_notes', models.TextField(blank=True, verbose_name='면접 참고사항')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='지원자')),
                ('recruitment_settings', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='applications.recruitmentsettings', verbose_name='모집 기수')),
            ],
            options={
                'verbose_name': '지원서',
                'verbose_name_plural': '지원서 목록',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(verbose_name='답변')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.application', verbose_name='지원서')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.question', verbose_name='질문')),
            ],
            options={
                'verbose_name': '답변',
                'verbose_name_plural': '답변 목록',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='recruitment_settings',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='applications.recruitmentsettings', verbose_name='모집 기수'),
        ),
    ]
