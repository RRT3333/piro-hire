# Generated by Django 5.0.2 on 2025-03-30 11:38

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='RecruitmentSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_start_date', models.DateTimeField()),
                ('application_end_date', models.DateTimeField()),
                ('interview_start_date', models.DateTimeField()),
                ('interview_end_date', models.DateTimeField()),
                ('recruitment_notice', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Recruitment Settings',
                'verbose_name_plural': 'Recruitment Settings',
            },
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, null=True, unique=True)),
                ('email', models.EmailField(help_text='로그인 시 사용할 이메일 주소를 입력해주세요.', max_length=254, unique=True, verbose_name='이메일')),
                ('name', models.CharField(help_text='실명을 입력해주세요.', max_length=150, verbose_name='이름')),
                ('phone_number', models.CharField(help_text='연락 가능한 전화번호를 입력해주세요.', max_length=20, verbose_name='전화번호')),
                ('profile_picture', models.ImageField(blank=True, help_text='5MB 이하의 이미지 파일을 업로드해주세요.', null=True, upload_to='profile_pictures/', verbose_name='프로필 사진')),
                ('is_email_verified', models.BooleanField(default=False, verbose_name='이메일 인증 여부')),
                ('email_verification_token', models.CharField(blank=True, max_length=6, verbose_name='이메일 인증 코드')),
                ('token_generated_at', models.DateTimeField(null=True, verbose_name='인증 코드 생성 시간')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='applicant_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='applicant_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '지원자',
                'verbose_name_plural': '지원자 목록',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted')], default='draft', max_length=20)),
                ('interview_times', models.JSONField(default=list, help_text='선택한 면접 가능 시간 목록')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='applications.applicant')),
                ('recruitment_settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.recruitmentsettings')),
            ],
            options={
                'unique_together': {('applicant', 'recruitment_settings')},
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('max_length', models.IntegerField(default=500)),
                ('order', models.IntegerField()),
                ('is_required', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recruitment_settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='applications.recruitmentsettings')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='applications.application')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.question')),
            ],
            options={
                'unique_together': {('application', 'question')},
            },
        ),
    ]
